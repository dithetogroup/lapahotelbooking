import{a as k,b as N,c as j}from"./chunk-T77KWDB3.js";import{a as S,b as M,c as L,d as V,e as W}from"./chunk-KV2HKO7R.js";import{Ab as A,L as G,cb as w,ib as O,r as E,zb as I}from"./chunk-XJPX7IZZ.js";import{Ac as t,Bc as d,Eb as v,Gc as b,Hc as C,Ic as R,Kb as y,Lc as f,Rc as u,Sc as g,Tb as P,Vc as F,ba as D,bc as e,cc as n,f as z,hc as Y,mc as p,qb as r,wb as c,xa as _,ya as x,zc as B}from"./chunk-YI4P4L32.js";import"./chunk-QDSGMOWV.js";var $=(()=>{class i{constructor(m,o){this.rolesSrv=m,this.permissionsSrv=o,this.permissionsOfRole={ADMIN:["canAdd","canDelete","canEdit","canRead"],EMPLOYEE:["canAdd","canEdit","canRead"]},this._destroy$=new z}ngOnInit(){this.currentRole=Object.keys(this.rolesSrv.getRoles())[0],this.currentPermissions=Object.keys(this.permissionsSrv.getPermissions()),this.rolesSrv.roles$.pipe(D(this._destroy$)).subscribe(m=>{console.log(m)}),this.permissionsSrv.permissions$.pipe(D(this._destroy$)).subscribe(m=>{console.log(m)})}ngOnDestroy(){this._destroy$.next(),this._destroy$.complete()}onPermissionChange(){this.currentPermissions=this.permissionsOfRole[this.currentRole],this.rolesSrv.flushRolesAndPermissions(),this.rolesSrv.addRoleWithPermissions(this.currentRole,this.currentPermissions)}static{this.\u0275fac=function(o){return new(o||i)(c(M),c(S))}}static{this.\u0275cmp=v({type:i,selectors:[["app-permissions-role-switching"]],decls:21,vars:7,consts:[["href","https://github.com/AlexKhymenko/ngx-permissions","target","_blank"],[3,"ngModelChange","change","ngModel"],["value","ADMIN"],["value","EMPLOYEE"]],template:function(o,s){o&1&&(e(0,"p"),t(1," The permissions management is powered by "),e(2,"a",0)(3,"code"),t(4,"ngx-permissions"),n()(),t(5,`.
`),n(),e(6,"mat-button-toggle-group",1),R("ngModelChange",function(a){return C(s.currentRole,a)||(s.currentRole=a),a}),p("change",function(){return s.onPermissionChange()}),e(7,"mat-button-toggle",2),t(8,"ADMIN"),n(),e(9,"mat-button-toggle",3),t(10,"EMPLOYEE"),n()(),e(11,"p"),t(12," Your current role: "),e(13,"code"),t(14),u(15,"json"),n()(),e(16,"p"),t(17," Your current permissions: "),e(18,"code"),t(19),u(20,"json"),n()()),o&2&&(r(6),b("ngModel",s.currentRole),r(8),d(g(15,3,s.currentRole)),r(5),d(g(20,5,s.currentPermissions)))},dependencies:[j,k,N,A,w,I,O,E],encapsulation:2})}}return i})();var K=(()=>{class i{constructor(m,o,s){this.rolesSrv=m,this.permissionsSrv=o,this.router=s,this.permissionsOfRole={ADMIN:["canAdd","canDelete","canEdit","canRead"],EMPLOYEE:["canAdd","canEdit","canRead"]}}ngOnInit(){this.currentRole=Object.keys(this.rolesSrv.getRoles())[0],this.currentPermissions=Object.keys(this.permissionsSrv.getPermissions())}onPermissionChange(){this.currentPermissions=this.permissionsOfRole[this.currentRole],this.rolesSrv.flushRolesAndPermissions(),this.rolesSrv.addRoleWithPermissions(this.currentRole,this.currentPermissions),this.router.navigateByUrl("/dashboard/dashboard1")}static{this.\u0275fac=function(o){return new(o||i)(c(M),c(S),c(G))}}static{this.\u0275cmp=v({type:i,selectors:[["app-permissions-route-guard"]],decls:17,vars:7,consts:[[3,"ngModelChange","change","ngModel"],["value","ADMIN"],["value","EMPLOYEE"]],template:function(o,s){o&1&&(e(0,"p"),t(1,` The route will be redirected to dashboard after change permission.
`),n(),e(2,"mat-button-toggle-group",0),R("ngModelChange",function(a){return C(s.currentRole,a)||(s.currentRole=a),a}),p("change",function(){return s.onPermissionChange()}),e(3,"mat-button-toggle",1),t(4,"ADMIN"),n(),e(5,"mat-button-toggle",2),t(6,"EMPLOYEE"),n()(),e(7,"p"),t(8," Your current role: "),e(9,"code"),t(10),u(11,"json"),n()(),e(12,"p"),t(13," Your current permissions: "),e(14,"code"),t(15),u(16,"json"),n()()),o&2&&(r(2),b("ngModel",s.currentRole),r(8),d(g(11,3,s.currentRole)),r(5),d(g(16,5,s.currentPermissions)))},dependencies:[j,k,N,A,w,I,O,E],encapsulation:2})}}return i})();var T=()=>["admin"],X=()=>["adminnnnn"];function Z(i,h){i&1&&(e(0,"p",11),t(1," I should see it only admin "),n())}function ee(i,h){i&1&&(e(0,"p",11),t(1," Usage on both only and except I should see it only admin "),n())}function te(i,h){i&1&&(e(0,"p",12),t(1,"I will see it except adminnnnn"),n())}function ie(i,h){i&1&&(e(0,"p",13),t(1,"I should see it except admin"),n())}function ne(i,h){i&1&&(e(0,"div"),t(1,` Testing template
`),n())}function se(i,h){i&1&&(e(0,"div"),t(1,` Testing template
`),n())}function oe(i,h){i&1&&(e(0,"p",14),t(1,"else block"),n())}function re(i,h){i&1&&(e(0,"p",15),t(1,"then block"),n())}function me(i,h){i&1&&(e(0,"button"),t(1," This should be visible to admin or superadmin "),n())}var q=(()=>{class i{constructor(m){this.permissionsSrv=m,this.comparedPermission=["admin"]}getPermissions(){return Object.keys(this.permissionsSrv.getPermissions())}addPermission(){this.permissionsSrv.addPermission("admin",()=>new Promise((m,o)=>{setTimeout(()=>m(!0),2e3)}))}removePermission(){this.permissionsSrv.removePermission("admin")}unAuthorized(){console.log("unAuthorized")}authorized(){console.log("authorizes")}changeToAdmin(){this.comparedPermission=["admin"],console.log(this.comparedPermission)}changeToEmployee(){this.comparedPermission=["employee"],console.log(this.comparedPermission)}static{this.\u0275fac=function(o){return new(o||i)(c(S))}}static{this.\u0275cmp=v({type:i,selectors:[["app-permissions-test"]],decls:34,vars:24,consts:[["a",""],["b",""],["type","danger"],[3,"click"],["permissions","",3,"ngxPermissionsOnly"],[3,"ngxPermissionsOnly","ngxPermissionsExcept"],["permissions","",3,"permissionsAuthorized","permissionsUnauthorized","ngxPermissionsExcept"],["permissions","",3,"ngxPermissionsExcept"],[4,"ngxPermissionsOnly","ngxPermissionsOnlyElse","ngxPermissionsOnlyThen"],[4,"ngxPermissionsExcept","ngxPermissionsExceptElse","ngxPermissionsExceptThen"],[4,"ngxPermissionsOnly"],[1,"bg-green-500","text-white"],[1,"bg-orange-500","text-white"],[1,"bg-indigo-500","text-white"],[1,"bg-gray-900","text-white"],[1,"bg-gray-300"]],template:function(o,s){if(o&1){let l=Y();e(0,"p",2),t(1,"The permissions check will delay 2s."),n(),e(2,"p")(3,"button",3),p("click",function(){return _(l),x(s.addPermission())}),t(4,"Add Permission [ admin ]"),n(),e(5,"button",3),p("click",function(){return _(l),x(s.removePermission())}),t(6,"Remove Permission [ admin ]"),n()(),y(7,Z,2,0,"ng-template",4)(8,ee,2,0,"ng-template",5)(9,te,2,0,"ng-template",6),p("permissionsAuthorized",function(){return _(l),x(s.authorized())})("permissionsUnauthorized",function(){return _(l),x(s.unAuthorized())}),y(10,ie,2,0,"ng-template",7)(11,ne,2,0,"div",8)(12,se,2,0,"div",9)(13,oe,2,0,"ng-template",null,0,F)(15,re,2,0,"ng-template",null,1,F),e(17,"p"),t(18," Compared permission: "),e(19,"code"),t(20),u(21,"json"),n()(),e(22,"div")(23,"button",3),p("click",function(){return _(l),x(s.changeToAdmin())}),t(24,"Change To Admin Permission"),n(),e(25,"button",3),p("click",function(){return _(l),x(s.changeToEmployee())}),t(26,"Change To Employee Permission"),n()(),e(27,"div"),y(28,me,2,0,"button",10),n(),e(29,"p"),t(30," Your current permissions: "),e(31,"code"),t(32),u(33,"json"),n()()}if(o&2){let l=B(14),a=B(16);r(7),P("ngxPermissionsOnly",f(18,T)),r(),P("ngxPermissionsOnly",f(19,T))("ngxPermissionsExcept","hhhhh"),r(),P("ngxPermissionsExcept",f(20,X)),r(),P("ngxPermissionsExcept",f(21,T)),r(),P("ngxPermissionsOnly",f(22,T))("ngxPermissionsOnlyElse",l)("ngxPermissionsOnlyThen",a),r(),P("ngxPermissionsExcept",f(23,T))("ngxPermissionsExceptElse",l)("ngxPermissionsExceptThen",a),r(8),d(g(21,14,s.comparedPermission)),r(8),P("ngxPermissionsOnly",s.comparedPermission),r(4),d(g(33,16,s.getPermissions()))}},dependencies:[W,L,E],encapsulation:2})}}return i})();var Ce=[{path:"role-switching",component:$},{path:"route-guard",component:K,canActivate:[V],data:{permissions:{redirectTo:"/dashboard"}}},{path:"test",component:q,canActivate:[V],data:{permissions:{only:"ADMIN",redirectTo:"/dashboard"}}}];export{Ce as PERMISSIONS_ROUTE};
